class Solution(object):
    def letterCombinations(self, digits):
        """
        :type digits: str
        :rtype: List[str]
        """
        #각숫자와 문자 dict로 연결
        '''
        mapping = {'2':"abc", '3':"def", '4':"ghi", '5':"jkl", '6':"mno", '7': "pqrs", 
        '8':"tuv", '9':"wxyz"}
        if len(digits) == 0:
            return []
        if len(digits) == 1:
            return list(mapping[digits[0]])
        prev = self.letterCombinations(digits[:-1])
        additional = mapping[digits[-1]]
        #return의 []안의문장 잘 기억하기!
        return [s + c for s in prev for c in additional]
        
        #앞에가 뒤에를 이룬다.
        '''
        
        if digits == "":
            return []
        
        hashMap = {'2':"abc", '3':"def", '4':"ghi", '5':"jkl", '6':"mno", '7':"pqrs", '8':"tuv", '9':"wxyz"}
        
        ret = [""]
        
        for i in digits:
            temp = []
            for j in ret:
                for z in hashMap[i]:
                    temp.append(j+z)
            ret = temp
        
        return ret